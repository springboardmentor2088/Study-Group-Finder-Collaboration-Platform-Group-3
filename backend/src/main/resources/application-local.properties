# ====================================================================
# Corrected Configuration File
# ====================================================================

# --------------------------------------------------------------------
# 1. LOCAL DATABASE CONFIG (CRITICAL FIX)
# --------------------------------------------------------------------
# ❗ FIX: The 'Access denied' error means the username/password combo is wrong.
# You MUST replace 'correct_password' with the actual password for the 'root' 
# user in your local MySQL instance.

spring.datasource.url=jdbc:mysql://localhost:3306/study_groupdb?serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
 # ⬅️ CHANGE THIS TO YOUR ACTUAL PASSWORD
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Set Hibernate DDL (Schema) generation strategy
# 'update' is common for development, but consider 'validate' or 'none' for production
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# --------------------------------------------------------------------
# 2. EMAIL CONFIGURATION (Standard and Robust)
# --------------------------------------------------------------------
# Using the dedicated SMTPS port (465) for explicit SSL is robust.
spring.mail.protocol=smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=abhishekhulule.sknsits.it@gmail.com
# ❗ REMINDER: This is an App Password for Gmail, not your main password.
# It should be kept secret and is not included here.
spring.mail.password=uihk sfqr dijx aygi 

spring.mail.properties.mail.smtp.auth=true
# Use explicit SSL/TLS connection settings for reliability on port 465
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# GLOBAL JAVAMAIL DEBUGGING - EXTREMELY USEFUL FOR TROUBLESHOOTING EMAIL
spring.mail.properties.mail.debug=true

# Robust Timeouts (Increased to 60 seconds)
spring.mail.properties.mail.smtp.connectiontimeout=60000 
spring.mail.properties.mail.smtp.timeout=60000
spring.mail.properties.mail.smtp.writetimeout=60000

# --------------------------------------------------------------------
# 3. JWT Configuration
# --------------------------------------------------------------------
# Best Practice: Use environment variables or secret management for this.
# Ensure the key is long and complex.
jwt.secret=ThisIsASecretKeyForJWTsThatShouldBeLongAndSecureAndDifferent
# Cleaned property: 86400000 milliseconds = 24 hours
jwt.expiration.ms=86400000